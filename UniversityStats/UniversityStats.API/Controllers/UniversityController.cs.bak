using Microsoft.AspNetCore.Mvc;
using UniversityStats.API.Dto;
using UniversityStats.API.Services;

namespace UniversityStats.API.Controllers;

/// <summary>
/// Controller responsible for managing university-related operations in the university statistics system.
/// Provides endpoints for retrieving, creating, updating, and deleting university information.
/// </summary>
/// <param name="service">An instance of UniversityService used for performing university-related business logic.</param>
[Route("api/[controller]")]
[ApiController]
public class UniversityController(UniversityService service) : ControllerBase
{
    /// <summary>
    /// Retrieves a list of all universities in the system.
    /// </summary>
    /// <returns>An HTTP 200 OK response containing a collection of university data transfer objects.</returns>
    /// <response code="200">Successfully retrieved the list of universities.</response>
    [HttpGet]
    public ActionResult<IEnumerable<UniversityDto>> Get()
    {
        return Ok(service.GetAll());
    }

    /// <summary>
    /// Retrieves a specific university by its unique registration number.
    /// </summary>
    /// <param name="registrationNumber">The unique registration number identifying the university.</param>
    /// <returns>An HTTP response containing the university details or a not found status.</returns>
    /// <response code="200">Successfully retrieved the university details.</response>
    /// <response code="404">No university found with the specified registration number.</response>
    [HttpGet("{registrationNumber}")]
    public ActionResult<UniversityDto> Get(string registrationNumber)
    {
        var university = service.GetById(registrationNumber);

        if (university == null)
            return NotFound();

        return Ok(university);
    }

    /// <summary>
    /// Adds a new university to the university statistics database.
    /// </summary>
    /// <param name="university">The university data transfer object containing university information.</param>
    /// <returns>An HTTP response with the created university details.</returns>
    /// <response code="200">Successfully added the new university.</response>
    [HttpPost]
    public ActionResult<UniversityDto> Post([FromBody] UniversityDto university)
    {
        service.Post(university);

        return Ok(university);
    }

    /// <summary>
    /// Corrects university's information by id
    /// </summary>
    /// <param name="university">University's information</param>
    /// <returns>Success or not</returns>
    [HttpPut]
    public ActionResult<UniversityDto> Put([FromBody] UniversityDto university)
    {
        if (!service.Put(university))
            return NotFound();

        return Ok(university);
    }

    /// <summary>
    /// Delete university's information by registration number
    /// </summary>
    /// <param name="registrationNumber">Registration number</param>
    /// <returns>Success or not</returns>
    [Produces("application/json")]
    [HttpDelete("{registrationNumber}")]
    public ActionResult<string> Delete(string registrationNumber)
    {
        if (!service.Delete(registrationNumber))
            return NotFound();

        return Ok("University was deleted");
    }
}
