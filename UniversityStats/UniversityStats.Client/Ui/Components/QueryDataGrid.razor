@inject IUniversityStatsWrapper UniversityStatsApi
@inject NavigationManager NavManager

<Card>
    <CardHeader>
        <Row Class="justify-content-between">
            <Column ColumnSize="ColumnSize.IsAuto">
                <h4>Universities</h4>
            </Column>   
        </Row>
    </CardHeader>
    <CardBody>
        <Table>
            <TableHeader>
                <TableRow>
                    <TableHeaderCell>Action</TableHeaderCell>
                    <TableHeaderCell>Task</TableHeaderCell>
                </TableRow>
            </TableHeader>
            <TableBody>
                <TableRow>
                    <TableRowHeader><Button Color="Color.Primary" Clicked="OpenTopFiveModal">Execute</Button></TableRowHeader>
                    <TableRowCell>Find 5 specialties with the highest number of groups</TableRowCell>
                </TableRow>
                <TableRow>
                    <TableRowHeader><Button Color="Color.Primary" Clicked="OpenDepartmentsModal">Execute</Button></TableRowHeader>
                    <TableRowCell>Count total departments in every university</TableRowCell>
                </TableRow>
                <TableRow>
                    <TableRowHeader><Button Color="Color.Primary" Clicked="OpenUniversityInfoModal">Execute</Button></TableRowHeader>
                    <TableRowCell>Get information about a specific university by registration number</TableRowCell>
                </TableRow>
                <TableRow>
                    <TableRowHeader><Button Color="Color.Primary" Clicked="OpenFacultiesSpecialtiesModal">Execute</Button></TableRowHeader>
                    <TableRowCell>Get information about faculties, departments, and specialties of a university</TableRowCell>
                </TableRow>
                <TableRow>
                    <TableRowHeader><Button Color="Color.Primary" Clicked="OpenDepartmentsFacultiesSpecialtiesModal">Execute</Button></TableRowHeader>
                    <TableRowCell>Get total departments, faculties, and specialties by property type</TableRowCell>
                </TableRow>
                <TableRow>
                    <TableRowHeader><Button Color="Color.Primary" Clicked="OpenGroupsByPropertyModal">Execute</Button></TableRowHeader>
                    <TableRowCell>Get universities with groups by property type</TableRowCell>
                </TableRow>
            </TableBody>
        </Table>
    </CardBody>
</Card>

<QueryTopFiveData @ref="TopFiveModal" OnTopFiveAdded="@HandleOnTopFiveAdded" />
<QueryTotalDepartmentsData @ref="DepartmentsModal" OnDepartmentsAdded="@HandleDepartmentsAdded" />
<QueryUniversityInfoData @ref="UniversityInfoModal" OnUniversityInfoAdded="@HandleUniversityInfoAdded" />
<QueryFacultiesSpecialtiesData @ref="FacultiesSpecialtiesModal" OnFacultiesSpecialtiesAdded="@HandleFacultiesSpecialtiesAdded" />
<QueryDepartmentsFacultiesSpecialtiesData @ref="DepartmentsFacultiesSpecialtiesModal" OnDepartmentsFacultiesSpecialtiesAdded="@HandleDepartmentsFacultiesSpecialtiesAdded" />
<QueryGroupsByPropertyData @ref="GroupsByPropertyModal" OnGroupsByPropertyAdded="@HandleGroupsByPropertyAdded" />

@code {
    [Parameter]
    public EventCallback OnDataChanged { get; set; }

    private QueryTopFiveData TopFiveModal { get; set; } = new();
    private QueryTotalDepartmentsData DepartmentsModal { get; set; } = new();
    private QueryUniversityInfoData UniversityInfoModal { get; set; } = new();
    private QueryFacultiesSpecialtiesData FacultiesSpecialtiesModal { get; set; } = new();
    private QueryDepartmentsFacultiesSpecialtiesData DepartmentsFacultiesSpecialtiesModal { get; set; } = new();
    private QueryGroupsByPropertyData GroupsByPropertyModal { get; set; } = new();

    private async Task OpenTopFiveModal() => await TopFiveModal.Show();
    private async Task OpenDepartmentsModal() => await DepartmentsModal.Show();
    private async Task OpenUniversityInfoModal() => await UniversityInfoModal.Show();
    private async Task OpenFacultiesSpecialtiesModal() => await FacultiesSpecialtiesModal.Show();
    private async Task OpenDepartmentsFacultiesSpecialtiesModal() => await DepartmentsFacultiesSpecialtiesModal.Show();
    private async Task OpenGroupsByPropertyModal() => await GroupsByPropertyModal.Show();

    private async Task HandleOnTopFiveAdded() => await OnDataChanged.InvokeAsync();
    private async Task HandleDepartmentsAdded() => await OnDataChanged.InvokeAsync();
    private async Task HandleUniversityInfoAdded() => await OnDataChanged.InvokeAsync();
    private async Task HandleFacultiesSpecialtiesAdded() => await OnDataChanged.InvokeAsync();
    private async Task HandleDepartmentsFacultiesSpecialtiesAdded() => await OnDataChanged.InvokeAsync();
    private async Task HandleGroupsByPropertyAdded() => await OnDataChanged.InvokeAsync();
}
